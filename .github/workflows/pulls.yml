---
# #####
# TERRAFORM LIFECYCLE MANAGED
# All changes will be overwritten
#####
# https://docs.github.com/en/actions/reference
# https://docs.github.com/en/actions/reference/events-that-trigger-workflows
# https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions
# https://docs.github.com/en/actions/reference/workflow-commands-for-github-actions
# https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions
# https://docs.github.com/en/actions/reference/software-installed-on-github-hosted-runners
name : pulls
on :
  pull_request :
    types :
    - "opened"
    - "reopened"
    - "edited"
    - "closed"
    - "synchronize"
    - "ready_for_review"
    - "review_requested"
    - "review_request_removed"
    - "unassigned"
    - "assigned"
    - "unlabeled"
    - "labeled"
    - "unlocked"
    - "locked"

jobs :
  default :
    runs-on : ubuntu-latest
    steps :
    - name : default label bug
      uses : "npm/.github/actions/default@v0.4.0"
      with :
        regex   : '^(fix)(\([\w\-]+\))?(\!)?(\:)'
        subject : '${{ github.event.pull_request.title }}'
        input   : 'issues | addLabels | context.repo | issue_number:${{ github.event.pull_request.number }} | labels:[ "bug" ]'
        token   : '${{ secrets.GITHUB_TOKEN }}'
    - name : default label feature
      uses : "npm/.github/actions/default@v0.4.0"
      with :
        regex   : '^(feat)(\([\w\-]+\))?(\!)?(\:)'
        subject : '${{ github.event.pull_request.title }}'
        input   : 'issues | addLabels | context.repo | issue_number:${{ github.event.pull_request.number }} | labels:[ "feature" ]'
        token   : '${{ secrets.GITHUB_TOKEN }}'
    - name : default label chore
      uses : "npm/.github/actions/default@v0.4.0"
      with :
        regex   : '^(chore)(\([\w\-]+\))?(\!)?(\:)'
        subject : '${{ github.event.pull_request.title }}'
        input   : 'issues | addLabels | context.repo | issue_number:${{ github.event.pull_request.number }} | labels:[ "chore" ]'
        token   : '${{ secrets.GITHUB_TOKEN }}'
    - name : default assignees actor
      uses : "npm/.github/actions/default@v0.4.0"
      if : contains( github.actor , '[bot]' ) == false
      with :
        input   : 'issues | addAssignees | context.repo | issue_number:${{ github.event.pull_request.number }} | assignees:[ "${{ github.actor }}" ]'
        token   : '${{ secrets.GITHUB_TOKEN }}'

